---
import type { HTMLAttributes } from 'astro/types';

type Props = HTMLAttributes<'a'>;

const { href, class: className, ...props } = Astro.props;

const { pathname } = Astro.url;
const subpath = pathname.match(/[^\/]+/g);
const isActive = href === pathname || href === '/' + subpath?.[0];
---

<a href={href} class:list={[className, { active: isActive }]} {...props}>
	<slot />
</a>
<style>
	a {
		display: inline-block;
		text-decoration: none;
	}
	a.active {
		font-weight: bolder;
		text-decoration: underline;
		text-align: center;
		background: linear-gradient(90deg, #32CCEE 1%, #FF2D86 25%, #FF01F1 50%, #FFD335 75%, #32CCEE 99%);
		background-size: 200% auto;
		color: #000;
		background-clip: text;
		text-fill-color: transparent;
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		animation: shine 8s linear infinite;
	}

	@keyframes shine {
		to {
			background-position: 200% center;
		}
	}
</style>
